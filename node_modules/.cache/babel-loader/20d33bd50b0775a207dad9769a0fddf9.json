{"ast":null,"code":"var _jsxFileName = \"/Users/powderlj/Desktop/Apprenticeship/react-complete-guide/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\"); //const [userInput, setUserInput] = useState({\n  //    enteredTitle: \" \",\n  //    enteredAmount: \" \",\n  //    enteredDate: \" \",\n  //});\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value); //setUserInput({\n    //...userInput,\n    //enteredTitle:event.target.value,\n    //})\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value); //OR\n    //setUserInput({\n    //    ...userInput,\n    //    enteredAmount:event.target.value,\n    //    });\n    //OR\n    //setUserInput((prevState) => {\n    //    return {...prevState, enteredTitle: event.target.value};\n    //});  //use this way when new state relies on the old value (counter)\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value); //setUserInput({\n    //    ...userInput,\n    //    enteredDate:event.target.value,\n    //    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\"); //This will clear the data after entered by user to display empty form again\n\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle //sets the value to be clear after submit\n          ,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          value: enteredAmount,\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          value: enteredDate,\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"cQceuCgozgRBnFcek1NBqBcFFts=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/powderlj/Desktop/Apprenticeship/react-complete-guide/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\n    const [enteredDate, setEnteredDate] = useState(\"\");\n\n    //const [userInput, setUserInput] = useState({\n    //    enteredTitle: \" \",\n    //    enteredAmount: \" \",\n    //    enteredDate: \" \",\n    //});\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n        //setUserInput({\n        //...userInput,\n        //enteredTitle:event.target.value,\n        //})\n    };\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n\n        //OR\n\n        //setUserInput({\n        //    ...userInput,\n        //    enteredAmount:event.target.value,\n        //    });\n\n        //OR\n\n        //setUserInput((prevState) => {\n        //    return {...prevState, enteredTitle: event.target.value};\n        //});  //use this way when new state relies on the old value (counter)\n    };\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n        //setUserInput({\n        //    ...userInput,\n        //    enteredDate:event.target.value,\n        //    });\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        \n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        };\n\n        props.onSaveExpenseData(expenseData);\n        setEnteredTitle(\"\");//This will clear the data after entered by user to display empty form again\n        setEnteredAmount(\"\");\n        setEnteredDate(\"\");\n    };\n\n    return (\n    <form onSubmit ={submitHandler}>\n        <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n                <label>Title</label>\n                <input \n                    type=\"text\" \n                    value ={enteredTitle}//sets the value to be clear after submit\n                    onChange={titleChangeHandler}\n                />\n            </div>\n            <div className=\"new-expense__control\">\n                <label>Amount</label>\n                <input \n                    type=\"number\" \n                    min=\"0.01\" \n                    step=\"0.01\" \n                    value={enteredAmount}\n                    onChange={amountChangeHandler}\n                />\n            </div>\n            <div className=\"new-expense__control\">\n                <label>Date</label>\n                <input \n                    type=\"date\" \n                    min=\"2019-01-01\" \n                    max=\"2022-12-31\" \n                    value={enteredDate}\n                    onChange={dateChangeHandler}\n                />\n            </div>\n        </div>\n        <div className=\"new-expense__actions\">\n            <button type=\"submit\">Add Expense</button>\n        </div>\n    </form>\n    );\n};\n\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}