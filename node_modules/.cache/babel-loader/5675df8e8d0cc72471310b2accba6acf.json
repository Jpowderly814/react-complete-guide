{"ast":null,"code":"var _jsxFileName = \"/Users/powderlj/Desktop/Apprenticeship/react-complete-guide/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpensesFilter';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2020'); //const [filteredExpenses, setFilteredExpenses[]] = useState([]);\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = year => {\n    setExpenses(prevExpenses => {\n      return [...prevExpenses].filter(expense => expense.date.getFullYear().toString() === year);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), props.items.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/powderlj/Desktop/Apprenticeship/react-complete-guide/src/components/Expenses/Expenses.js"],"names":["ExpenseItem","Card","ExpensesFilter","useState","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","year","setExpenses","prevExpenses","filter","expense","date","getFullYear","toString","items","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,MAAD,CAAhD,CAFwB,CAGxB;;AAEA,QAAMK,mBAAmB,GAAGC,YAAY,IAAI;AAExCF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACH,GAHD;;AAOA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AAC/BC,IAAAA,WAAW,CAACC,YAAY,IAAI;AAC1B,aAAO,CAAC,GAAGA,YAAJ,EAAkBC,MAAlB,CAA0BC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CP,IAAhF,CAAP;AACD,KAFU,CAAX;AAGD,GAJH;;AAMA,sBACI;AAAA,2BAEI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAG,UAAlB;AAAA,8BACI,QAAC,cAAD;AACI,QAAA,QAAQ,EAAEL,YADd;AAEI,QAAA,cAAc,EAAIE;AAFtB;AAAA;AAAA;AAAA;AAAA,cADJ,EAKKH,KAAK,CAACc,KAAN,CAAYC,GAAZ,CAAiBL,OAAD,iBACb,QAAC,WAAD;AAEI,QAAA,KAAK,EAAEA,OAAO,CAACM,KAFnB;AAGI,QAAA,MAAM,EAAEN,OAAO,CAACO,MAHpB;AAII,QAAA,IAAI,EAAEP,OAAO,CAACC;AAJlB,SACSD,OAAO,CAACQ,EADjB;AAAA;AAAA;AAAA;AAAA,cADH,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBE,CArCN;;GAAMnB,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpensesFilter';\nimport {useState} from \"react\";\n\nconst Expenses = (props) => {\n\n    const [filteredYear, setFilteredYear] = useState('2020');\n    //const [filteredExpenses, setFilteredExpenses[]] = useState([]);\n\n    const filterChangeHandler = selectedYear => {\n        \n        setFilteredYear(selectedYear);\n    };\n\n   \n\n    const filteredExpenses = (year) => {\n        setExpenses(prevExpenses => {\n          return [...prevExpenses].filter((expense) => expense.date.getFullYear().toString() === year)\n        })\n      }\n\n    return( \n        <div>\n    \n            <Card className = \"expenses\">\n                <ExpensesFilter \n                    selected={filteredYear} \n                    onChangeFilter = {filterChangeHandler}\n                />\n                {props.items.map((expense) => (\n                    <ExpenseItem \n                        key={expense.id} \n                        title={expense.title} \n                        amount={expense.amount} \n                        date={expense.date}\n                    />\n                ))} \n           \n            </Card>\n        </div>\n    )}\n\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}